package OA

import (
	"context"
	"fmt"
	"github.com/imroc/req/v3"
	"time"
)

type TongDa struct {
	Url     string
	Choose  string
	Thread  int
	Timeout int
	Payload string
	Result  chan string
}

func (tongda *TongDa) ExpListInfoExploit() []string {
	return []string{
		"All",
		"TongdaOA_Attachment_remark_FileInclude",
		"TongdaOA_Management_Upload_Getshell",
		"TongdaOA_Delete_Authincphp_Getshell",
		"TongdaOA_Ispirit_Upload_Getshell",
		"TongdaOA_Api_Ali_Upload_Getshell",
		"TongdaOA_Report_Bi_Sqlnjection",
		"TongdaOA_Swfupload_Sqlnjection",
		"TongdaOA_File_Include_Getshell",
		"TongdaOA_Get_Contactlist",
		"TongdaOA_AnyUser_Login",
	}
}

func (tongda *TongDa) RunExploit() {
	switch tongda.Choose {
	case "All":
		tongda.TongdaOA_Attachment_remark_FileInclude()
		tongda.TongdaOA_Management_Upload_Getshell()
		tongda.TongdaOA_Delete_Authincphp_Getshell()
		tongda.TongdaOA_Ispirit_Upload_Getshell()
		tongda.TongdaOA_Api_Ali_Upload_Getshell()
		tongda.TongdaOA_Report_Bi_Sqlnjection()
		tongda.TongdaOA_Swfupload_Sqlnjection()
		tongda.TongdaOA_File_Include_Getshell()
		tongda.TongdaOA_Get_Contactlist()
		tongda.TongdaOA_AnyUser_Login()
		break
	default:
		break
	}
}

func (tongda *TongDa) TongdaOA_Attachment_remark_FileInclude() {
	paths := []string{
		"/ispirit/im/upload.php",
		"/ispirit/interface/gateway.php",
		"/mac/gateway.php",
	}

	ctx, chanel := context.WithTimeout(context.Background(), time.Second*time.Duration(tongda.Timeout))
	defer chanel()

	for _, path := range paths {
		resp, err := req.SetHeaders(map[string]string{
			"User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36",
		}).SetContext(ctx).Get(fmt.Sprintf("%s%s", tongda.Url, path))
		if err != nil {
			tongda.Result <- fmt.Sprintf("[-]%s -> %s %s\n", "TongdaOA_Attachment_remark_FileInclude检测失败", tongda.Url, err.Error())
			continue
		}

		if resp.StatusCode == 200 {
			tongda.Result <- fmt.Sprintf("[+]%s -> %s\n", "TongdaOA_Attachment_remark_FileInclude存在漏洞", tongda.Url)
			continue
		} else {
			tongda.Result <- fmt.Sprintf("[-]%s -> %s\n", "TongdaOA_Attachment_remark_FileInclude不存在漏洞", tongda.Url)
			continue
		}
	}
}

func (tongda *TongDa) TongdaOA_Management_Upload_Getshell() {

}

func (tongda *TongDa) TongdaOA_Delete_Authincphp_Getshell() {

}

func (tongda *TongDa) TongdaOA_Ispirit_Upload_Getshell() {

}

func (tongda *TongDa) TongdaOA_Api_Ali_Upload_Getshell() {

}

func (tongda *TongDa) TongdaOA_Report_Bi_Sqlnjection() {

}

func (tongda *TongDa) TongdaOA_Swfupload_Sqlnjection() {

}

func (tongda *TongDa) TongdaOA_File_Include_Getshell() {

}

func (tongda *TongDa) TongdaOA_Get_Contactlist() {

}

func (tongda *TongDa) TongdaOA_AnyUser_Login() {

}
